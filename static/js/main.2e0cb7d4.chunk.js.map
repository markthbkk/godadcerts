{"version":3,"sources":["components/Certs/CertDate.js","components/Certs/CertItems.js","components/Certs/Certs.js","components/Certs/CertForm.js","App.js","index.js"],"names":["CertDate","props","month","date","toLocaleString","day","year","getFullYear","className","CertItem","deleteCert","e","console","log","target","dataset","certid","axios","delete","axiosResponse","status","deleteHandler","subjectName","type","onClick","id","subStart","subEnd","certExpiry","Certs","items","map","cert","Date","subscriptionStartDate","subscriptionEndDate","certificateExpiryDate","certDeleteHandler","_id","CertForm","useState","showCertForm","setShowCertForm","setSubjectName","subStartDate","setSubStartDate","subEndDate","setSubEndDate","certExpiryDate","setCertExpiryDate","postData","data","post","headers","Accept","submitHandler","handleChange","response","message","code","keyValue","addButton","document","getElementById","classList","toggle","Form","Field","placeholder","onChange","value","spellCheck","Button","App","SSLCerts","setSSLCerts","readCertsDB","get","certDataJSON","GODADDY_CERTS_SORTED_ASC","sort","objA","objB","Number","useEffect","src","alt","prevArray","filter","el","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.2e0cb7d4.chunk.js","sourcesContent":["import \"./CertDate.css\";\n\nconst CertDate = (props) => {\n  // console.log(props)\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"cert-date\">\n      <div className=\"cert-date__day\">{day}</div>\n      <div className=\"cert-date__month\">{month}</div>\n      <div className=\"cert-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default CertDate;\n","import CertDate from \"./CertDate\";\nimport \"./CertItems.css\";\nimport axios from \"axios\";\n\n\nconst CertItem = (props) => {\n\n  const deleteCert = async function (e) {\n    console.log(e.target.dataset.certid);\n\n    const axiosResponse = await axios.delete(\n      `https://certsapi.onrender.com/api/v1/certs/${e.target.dataset.certid}`\n    );\n\n    console.log(axiosResponse);\n\n    if (axiosResponse.status === 204) {\n      props.deleteHandler(e.target.dataset.certid);\n\n\n    };\n\n  }\n\n  // console.log(props.id);\n  return (\n    <div className=\"cert-item-wrapper\">\n      <div className=\"cert-item-top-row\">\n        <div className=\"Cert-item__subjectName\">{props.subjectName}</div>\n        <button\n          type=\"submit\"\n          onClick={(e) => deleteCert(e)}\n          className=\"deleteCert\"\n          data-certid={props.id}\n        >\n          X\n        </button>\n      </div>\n      <div className=\"cert-item\">\n        <h2>Subscription Started</h2>\n        <CertDate date={props.subStart} />\n      </div>\n      <div className=\"cert-item\">\n        <h2>Subscription Ends</h2>\n        <CertDate date={props.subEnd} />\n      </div>\n      <div className=\"cert-item\">\n        <h2>Certificate Expires</h2>\n        <CertDate date={props.certExpiry} />\n      </div>\n    </div>\n  );\n};\n\nexport default CertItem\n","import CertItem from \"./CertItems\";\n\nimport \"./Certs.css\";\n\nconst Certs = (props) => {\n   console.log(props);\n  return (\n    <div>\n      <div className=\"infoText2\">\n        <p>Sorted by Certificate Expiry</p>\n      </div>\n      {props.items.map((cert) => (\n        <CertItem\n          subjectName={cert.subjectName}\n          subStart={new Date(cert.subscriptionStartDate)}\n          subEnd={new Date(cert.subscriptionEndDate)}\n          certExpiry={new Date(cert.certificateExpiryDate)}\n          id={cert.id}\n          key={cert._id}\n          deleteHandler={props.certDeleteHandler}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Certs;\n","import { useState } from \"react\";\r\nimport \"./CertForm.css\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CertForm(props) {\r\n  const [showCertForm, setShowCertForm] = useState(false);\r\n  const [subjectName, setSubjectName] = useState(\"\");\r\n  const [subStartDate, setSubStartDate] = useState(\"\");\r\n  const [subEndDate, setSubEndDate] = useState(\"\");\r\n  const [certExpiryDate, setCertExpiryDate] = useState(\"\");\r\n\r\n  const postData = async () => {\r\n    const data = {\r\n      subjectName: subjectName,\r\n      subscriptionStartDate: subStartDate,\r\n      subscriptionEndDate: subEndDate,\r\n      certificateExpiryDate: certExpiryDate,\r\n    };\r\n\r\n    try {const axiosResponse = await axios.post(\r\n      `https://certsapi.onrender.com/api/v1/certs`,\r\n      data,\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n      }\r\n    );\r\n      console.log(axiosResponse);\r\n\r\n      data.id = axiosResponse.data.id;\r\n\r\n      console.log(data);\r\n\r\n      if (axiosResponse.status === 200) {\r\n        props.submitHandler(data);\r\n\r\n        handleChange();\r\n      } \r\n\r\n      \r\n    }\r\n    \r\n    catch (err) {console.log(err.response.data.message.code, err.response.data.message.keyValue);}\r\n   \r\n    \r\n\r\n    \r\n  };\r\n\r\nconst addButton = document.getElementById('addButton');\r\n\r\n  const handleChange = () => {\r\n\r\n    addButton.classList.toggle('hidden')\r\n    return setShowCertForm(!showCertForm);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"addButton\" className=\"certFormToggle\">\r\n        <button type=\"submit\" onClick={() => handleChange()}>\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        {showCertForm ? (\r\n          <div className=\"formLayout\">\r\n            <Form className=\"create-form\">\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subject Name</label>\r\n                  <input\r\n                    placeholder=\"Subject Name\"\r\n                    onChange={(e) => setSubjectName(e.target.value)}\r\n                    spellCheck=\"false\"\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subscription Start Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setSubStartDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subscription End Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setSubEndDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Certificate Expiry Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setCertExpiryDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n              <div id=\"buttonsRow\">\r\n                <div>\r\n                  <Button\r\n                    className=\"submitButton\"\r\n                    onClick={postData}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    className=\"submitButton\"\r\n                    onClick={handleChange}\r\n                    type=\"submit\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Certs from \"./components/Certs/Certs\";\nimport CertForm from \"./components/Certs/CertForm\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [SSLCerts, setSSLCerts] = useState([]);\n\n  const readCertsDB = async function () {\n    const certDataJSON = await axios.get(\n      `https://certsapi.onrender.com/api/v1/certs`\n    );\n\n    console.log(certDataJSON.data);\n\n    const GODADDY_CERTS_SORTED_ASC = certDataJSON.data.sort(\n      (objA, objB) =>\n        Number(new Date(objA.certificateExpiryDate)) -\n        Number(new Date(objB.certificateExpiryDate))\n    );\n\n    // console.log(certDataJSON.status);\n\n    if (certDataJSON.status === 200) {\n      setSSLCerts(GODADDY_CERTS_SORTED_ASC);\n    }\n  };\n\n  const deleteCertFromState = (id) => {\n    console.log(`Preparing to DELETE ${id}`);\n\n    setSSLCerts((prevArray) => {\n      return prevArray.filter(function (el) {\n        return el.id !== id;\n      });\n    });\n  };\n\n  const addCertHandler = (cert) => {\n    setSSLCerts((prevArray) => {\n      return [cert, ...prevArray].sort(\n        (objA, objB) =>\n          Number(new Date(objA.certificateExpiryDate)) -\n          Number(new Date(objB.certificateExpiryDate))\n      );\n    });\n  };\n\n  useEffect(() => {\n    readCertsDB();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"AppFrame\">\n      <div className=\"infoText1\">\n        <div>\n          <img src=\"GoDaddyLogo.jpg\" alt=\"GoDaddy Logo\"></img>\n        </div>\n        <h2>SSL Certificates</h2>\n      </div>\n      <CertForm submitHandler={addCertHandler}></CertForm>\n      <Certs items={SSLCerts} certDeleteHandler={deleteCertFromState} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}