{"version":3,"sources":["components/Certs/CertDate.js","components/Certs/CertItems.js","components/Certs/Certs.js","components/Certs/CertForm.js","App.js","index.js"],"names":["CertDate","props","month","date","toLocaleString","day","year","getFullYear","className","CertItem","deleteCert","e","console","log","target","dataset","certid","axios","delete","axiosResponse","status","deleteHandler","subjectName","type","onClick","id","subStart","subEnd","certExpiry","Certs","infoText2","items","length","map","cert","Date","subscriptionStartDate","subscriptionEndDate","certificateExpiryDate","certDeleteHandler","_id","CertForm","useState","showCertForm","setShowCertForm","setSubjectName","subStartDate","setSubStartDate","subEndDate","setSubEndDate","certExpiryDate","setCertExpiryDate","isShown","setShown","postError1","setPostError1","postError2","setPostError2","postData","data","post","headers","Accept","submitHandler","handleChange","response","message","keyValue","errorField","Object","keys","code","addButton","document","getElementById","classList","toggle","onClose","Header","title","Content","Form","Field","placeholder","onChange","value","spellCheck","Button","App","loadSpinner","SSLCerts","setSSLCerts","dataLoading","setDataLoading","readCertsDB","get","certDataJSON","GODADDY_CERTS_SORTED_ASC","sort","objA","objB","Number","useEffect","flexDirection","size","src","alt","prevArray","filter","el","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.d334d89a.chunk.js","sourcesContent":["import \"./CertDate.css\";\n\nconst CertDate = (props) => {\n  // console.log(props)\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"cert-date\">\n      <div className=\"cert-date__day\">{day}</div>\n      <div className=\"cert-date__month\">{month}</div>\n      <div className=\"cert-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default CertDate;\n","import CertDate from \"./CertDate\";\nimport \"./CertItems.css\";\nimport axios from \"axios\";\n\n\nconst CertItem = (props) => {\n\n  const deleteCert = async function (e) {\n    console.log(e.target.dataset.certid);\n\n    const axiosResponse = await axios.delete(\n      `https://certsapi.onrender.com/api/v1/certs/${e.target.dataset.certid}`\n    );\n\n    console.log(axiosResponse);\n\n    if (axiosResponse.status === 204) {\n      props.deleteHandler(e.target.dataset.certid);\n\n\n    };\n\n  }\n\n  // console.log(props.id);\n  return (\n    <div className=\"cert-item-wrapper\">\n      <div className=\"cert-item-top-row\">\n        <div className=\"Cert-item__subjectName\">{props.subjectName}</div>\n        <button\n          type=\"submit\"\n          onClick={(e) => deleteCert(e)}\n          className=\"deleteCert\"\n          data-certid={props.id}\n        >\n          X\n        </button>\n      </div>\n      <div className=\"cert-item\">\n        <h2>Subscription Started</h2>\n        <CertDate date={props.subStart} />\n      </div>\n      <div className=\"cert-item\">\n        <h2>Subscription Ends</h2>\n        <CertDate date={props.subEnd} />\n      </div>\n      <div className=\"cert-item\">\n        <h2>Certificate Expires</h2>\n        <CertDate date={props.certExpiry} />\n      </div>\n    </div>\n  );\n};\n\nexport default CertItem\n","import CertItem from \"./CertItems\";\n\nimport \"./Certs.css\";\n\nconst Certs = (props) => {\n  console.log(props);\n\n  let infoText2\n  \nif (props.items.length > 0) {infoText2 = <p>Sorted by Certificate Expiry</p>}\n\n  return (\n    <div>\n      <div className=\"infoText2\">\n        {infoText2}\n      </div>\n      {props.items.map((cert) => (\n        <CertItem\n          subjectName={cert.subjectName}\n          subStart={new Date(cert.subscriptionStartDate)}\n          subEnd={new Date(cert.subscriptionEndDate)}\n          certExpiry={new Date(cert.certificateExpiryDate)}\n          id={cert.id}\n          key={cert._id}\n          deleteHandler={props.certDeleteHandler}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Certs;\n","import { useState } from \"react\";\r\nimport \"./CertForm.css\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Modal,\r\n  Paragraph,\r\n  Heading,\r\n} from \"@contentful/f36-components\";\r\n\r\nexport default function CertForm(props) {\r\n  const [showCertForm, setShowCertForm] = useState(false);\r\n  const [subjectName, setSubjectName] = useState(\"\");\r\n  const [subStartDate, setSubStartDate] = useState(\"\");\r\n  const [subEndDate, setSubEndDate] = useState(\"\");\r\n  const [certExpiryDate, setCertExpiryDate] = useState(\"\");\r\n  const [isShown, setShown] = useState(false);\r\n  const [postError1, setPostError1] = useState(\"\");\r\n  const [postError2, setPostError2] = useState(\"\");\r\n  \r\n\r\n  const postData = async () => {\r\n    const data = {\r\n      subjectName: subjectName,\r\n      subscriptionStartDate: subStartDate,\r\n      subscriptionEndDate: subEndDate,\r\n      certificateExpiryDate: certExpiryDate,\r\n    };\r\n\r\n    try {\r\n      \r\n      const axiosResponse = await axios.post(\r\n        `https://certsapi.onrender.com/api/v1/certs`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n          },\r\n        }\r\n      );\r\n      console.log(axiosResponse);\r\n\r\n      data.id = axiosResponse.data.id;\r\n\r\n      console.log(data);\r\n\r\n      if (axiosResponse.status === 200) {\r\n        props.submitHandler(data);\r\n\r\n        \r\n\r\n        handleChange();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      if (err.response.data.message.keyValue) {\r\n        const errorField = Object.keys(err.response.data.message.keyValue)[0];\r\n\r\n        setPostError1(`Error code: ${err.response.data.message.code}`);\r\n\r\n        setPostError2(\r\n          `There was a problem entering: ${errorField} - Please re-enter data in the correct format - Subject Names must be unique`\r\n        );\r\n      } else if (err.response.data.message.message) {\r\n        setPostError1(`${err.response.data.message.message}`);\r\n\r\n        setPostError2(`Please re-enter the data in the correct format`);\r\n      }\r\n\r\n      \r\n      setShown(true);\r\n    }\r\n  };\r\n\r\n  const addButton = document.getElementById(\"addButton\");\r\n\r\n  const handleChange = () => {\r\n    addButton.classList.toggle(\"hidden\");\r\n    return setShowCertForm(!showCertForm);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Modal onClose={() => setShown(false)} isShown={isShown}>\r\n        {() => (\r\n          <>\r\n            <Modal.Header\r\n              title=\"Form submit error\"\r\n              onClose={() => setShown(false)}\r\n            />\r\n            <Modal.Content>\r\n              <Heading>Your attempt to post this form data has failed</Heading>\r\n              <Paragraph>{postError1}</Paragraph>\r\n              <Paragraph>{postError2}</Paragraph>\r\n            </Modal.Content>\r\n          </>\r\n        )}\r\n      </Modal>\r\n\r\n      <div id=\"addButton\" className=\"certFormToggle\">\r\n        <button type=\"submit\" onClick={() => handleChange()}>\r\n          Add\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        {showCertForm ? (\r\n          <div className=\"formLayout\">\r\n            <Form className=\"create-form\">\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subject Name</label>\r\n                  <input\r\n                    placeholder=\"Subject Name\"\r\n                    onChange={(e) => setSubjectName(e.target.value)}\r\n                    spellCheck=\"false\"\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subscription Start Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setSubStartDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Subscription End Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setSubEndDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <div className=\"label\">\r\n                  <label>Certificate Expiry Date</label>\r\n                  <input\r\n                    placeholder=\"YYYY-MM-DD\"\r\n                    onChange={(e) => setCertExpiryDate(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Form.Field>\r\n              <div id=\"buttonsRow\">\r\n                <div>\r\n                  <Button\r\n                    className=\"submitButton\"\r\n                    onClick={postData}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    className=\"submitButton\"\r\n                    onClick={handleChange}\r\n                    type=\"submit\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Certs from \"./components/Certs/Certs\";\nimport CertForm from \"./components/Certs/CertForm\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Stack, Spinner } from \"@contentful/f36-components\";\n\nconst App = () => {\n  const [SSLCerts, setSSLCerts] = useState([]);\n  const [dataLoading, setDataLoading] = useState(false);\n\n  const readCertsDB = async function () {\n    setDataLoading(true);\n    const certDataJSON = await axios.get(\n      `https://certsapi.onrender.com/api/v1/certs`\n    );\n\n    console.log(certDataJSON.data);\n\n    const GODADDY_CERTS_SORTED_ASC = certDataJSON.data.sort(\n      (objA, objB) =>\n        Number(new Date(objA.certificateExpiryDate)) -\n        Number(new Date(objB.certificateExpiryDate))\n    );\n\n    // console.log(certDataJSON.status);\n\n    if (certDataJSON.status === 200) {\n      setSSLCerts(GODADDY_CERTS_SORTED_ASC);\n    }\n    setDataLoading(false);\n  };\n\n  const deleteCertFromState = (id) => {\n    console.log(`Preparing to DELETE ${id}`);\n\n    setSSLCerts((prevArray) => {\n      return prevArray.filter(function (el) {\n        return el.id !== id;\n      });\n    });\n  };\n\n  const addCertHandler = (cert) => {\n    setSSLCerts((prevArray) => {\n      return [cert, ...prevArray].sort(\n        (objA, objB) =>\n          Number(new Date(objA.certificateExpiryDate)) -\n          Number(new Date(objB.certificateExpiryDate))\n      );\n    });\n  };\n\n  useEffect(() => {\n    readCertsDB();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let loadSpinner;\n\n  if (dataLoading) {\n    loadSpinner = (\n      <Stack flexDirection=\"column\" className=\"spinner\">\n        <Spinner size=\"large\" />\n      </Stack>\n    );\n  } \n\n  return (\n    <div className=\"AppFrame\">\n      <div className=\"infoText1\">\n        <div>\n          <img src=\"GoDaddyLogo.jpg\" alt=\"GoDaddy Logo\"></img>\n        </div>\n        <h2>SSL Certificates</h2>\n      </div>\n\n      <CertForm submitHandler={addCertHandler}></CertForm>\n      {loadSpinner}\n      <Certs items={SSLCerts} certDeleteHandler={deleteCertFromState} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}